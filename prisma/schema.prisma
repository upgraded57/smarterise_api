// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                    String  @id @default(auto()) @map("_id") @db.ObjectId
  email                 String @unique
  name                  String 
  views                 Int @default(0)
  lastSeen              DateTime @default(now())
  type                  UserType @default(user)
  pageViews             PageViews[]
}

enum UserType {
  user 
  admin
}

model Picture {
  id                    String  @id @default(auto()) @map("_id") @db.ObjectId
  author                String 
  width                 Int
  height                Int
  url                   String
  download_url          String
  views                 PictureViews[]
  name                  String @default("")
}

model PictureViews {
  id                    String  @id @default(auto()) @map("_id") @db.ObjectId
  sessionId             String
  userId                String?
  picture               Picture @relation(fields: [pictureId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  pictureId             String @db.ObjectId
}

model PageViews {
  id                    String  @id @default(auto()) @map("_id") @db.ObjectId
  user                  User  @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId                String @db.ObjectId
  sessionId             String
  page                  String
  viewTime              DateTime @default(now())
  pictureId             String?
}